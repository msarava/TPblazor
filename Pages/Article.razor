@page "/article"
@using BlazorLeBonCoin.Component
@using BlazorLeBonCoin.Services
@using BlazorLeBonCoin.DTOs
@inject LoginService _loginService;
@inject NavigationManager _NavigationManager
@inject NavigationManager _Navigation
@inject ArticleService _articleService
@inject HttpClient _httpClient

<h1 class="text-center"><u>Le Bon Coin Toulouse</u></h1>

<div class="container">
    <EditForm Model="this" OnSubmit="Search">
        <div class="row m-1 mt-5 border border-secondary rounded p-3">
            <div class="col-1">
                <InputSelect style="height: 34px;" @bind-Value="Category">
                    <option selected value=0>All</option>
                    <option value=1>House</option>
                    <option value=2>Car</option>
                    <option value=3>Fashion</option>
                    <option value=4>Multimedia</option>
                </InputSelect>
            </div>
            <div class="col-9">
                <InputText class="p-1 form-control" @bind-Value="SearchText" placeholder="Search..."></InputText>
            </div>
            <button class="col-1 p-1 btn btn-secondary" type="submit">Search</button>
        </div>
    </EditForm>
    <div class="row m-1 mt-3 justify-content-center">
        <button class="col-6 p-1 btn btn-warning" @onclick=@Navigate>Add new article</button>
    </div>

    @if (ArticleData == null)
    {
        <div>Loading ... </div>

    }
    else
    {
        @foreach (ArticleResponseDTO article in ArticleDataSearch)
        {
            <ArticleListComponent article="@article"></ArticleListComponent>
        }
    }

</div>

@code {
    public List<ArticleResponseDTO>? ArticleData { get; set; }
    public List<ArticleResponseDTO>? ArticleDataSearch { get; set; }

    public int Category { get; set; }
    public string SearchText { get; set; }

    protected override async Task OnInitializedAsync()
    {
        if (!_loginService.IsLogged)
        {
            _NavigationManager.NavigateTo("login");
        }
        else
        {
            // _httpClient.DefaultRequestHeaders.Add("Authorization", "Bearer "+_loginService.Token);
            ArticleData = await _articleService.GetArticles();
            ArticleDataSearch = ArticleData.FindAll(art => art.StatusArticle == true);
            StateHasChanged();
        }

    }

    public void Search()
    {
        if (Category != 0)
        {
            ArticleDataSearch = ArticleData.FindAll(article => article.Title.Contains(SearchText) && article.CategoryId == Category && article.StatusArticle == true);

        }else{
            ArticleDataSearch = ArticleData.FindAll(article => article.Title.Contains(SearchText) && article.StatusArticle == true);

        }
        StateHasChanged();
    }

    void Navigate()
    {
        _Navigation.NavigateTo("addpagearticle");
    }
}
