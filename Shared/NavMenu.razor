@using BlazorLeBonCoin.Services
@inject NavigationManager _Navigation
@inject LoginService _LoginService
@inject HttpClient _HttpClient

<div class="top-row ps-3 navbar navbar-dark">
    <div class="container-fluid">
        <a class="navbar-brand" href="">BlazorLeBonCoin</a>
        <button title="Navigation menu" class="navbar-toggler" @onclick="ToggleNavMenu">
            <span class="navbar-toggler-icon"></span>
        </button>
    </div>
</div>

<div class="@NavMenuCssClass" @onclick="ToggleNavMenu">
    <nav class="flex-column">
        <div class="nav-item px-3">
            <NavLink class="nav-link" href="article" Match="NavLinkMatch.All">
                <span class="oi oi-home" aria-hidden="true"></span> Home
            </NavLink>
        </div>
        <div class="nav-item px-3">
            <NavLink class="nav-link" href="login">
                <span class="oi oi-person" aria-hidden="true"></span> Login/Register
            </NavLink>
        </div>
        <div class="nav-item px-3">
            <NavLink class="nav-link" href="addpagearticle">
                <span class="oi oi-plus" aria-hidden="true"></span> Add new article
            </NavLink>
        </div>
        <div class="nav-item px-3">
            <button class="btn btn-dark" @onclick=@Disconnect>
                <span class="oi oi-account-logout" aria-hidden="true"></span> Disconnect
            </button>
        </div>
    </nav>
</div>

@code {
    private bool collapseNavMenu = true;

    private string? NavMenuCssClass => collapseNavMenu ? "collapse" : null;

    private void ToggleNavMenu()
    {
        collapseNavMenu = !collapseNavMenu;
    }
    private void Disconnect()
    {
        _LoginService.IsLogged = false;
        _LoginService.Token = null;
        _Navigation.NavigateTo("");
        _HttpClient.DefaultRequestHeaders.Clear();
    }

}
